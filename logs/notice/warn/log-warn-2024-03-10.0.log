2024-03-10 00:09:27 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 00:16:14 |WARN  |Thread-58 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-03-10 00:16:14 |WARN  |Thread-58 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-03-10 00:16:14 |WARN  |Thread-61 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-03-10 00:16:14 |WARN  |Thread-61 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-03-10 00:16:16 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:16:16 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:16:58 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 00:20:11 |WARN  |Thread-45 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-03-10 00:20:11 |WARN  |Thread-49 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-03-10 00:20:11 |WARN  |Thread-45 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-03-10 00:20:11 |WARN  |Thread-49 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-03-10 00:20:12 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:20:12 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:21:07 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 00:28:00 |WARN  |Thread-38 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-03-10 00:28:00 |WARN  |Thread-42 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-03-10 00:28:00 |WARN  |Thread-38 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-03-10 00:28:00 |WARN  |Thread-42 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-03-10 00:28:02 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:28:02 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:28:41 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 00:30:51 |WARN  |ConsumeMessageThread_1 |DefaultRocketMQListenerContainer.java:354 |org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer |consume message failed. messageExt:MessageExt [queueId=0, storeSize=403, queueOffset=0, sysFlag=0, bornTimestamp=1710001828164, bornHost=/120.227.131.104:44213, storeTimestamp=1710001828274, storeHost=/47.97.29.16:10911, msgId=2F611D1000002A9F0000000000001957, commitLogOffset=6487, bodyCRC=1048138659, reconsumeTimes=0, preparedTransactionOffset=0, toString()=Message{topic='dynamic', flag=0, properties={MIN_OFFSET=0, MAX_OFFSET=1, CONSUME_START_TIME=1710001850337, id=d0e27a12-05bb-3cd5-b5f7-d1156f6a0d9c, UNIQ_KEY=C0A80A090A5814DAD5DC2E7520920001, CLUSTER=DefaultCluster, contentType=text/plain;charset=UTF-8, timestamp=1710001827683}, body=[123, 34, 105, 100, 34, 58, 110, 117, 108, 108, 44, 34, 118, 105, 100, 101, 111, 78, 97, 109, 101, 34, 58, 34, -27, -121, -70, -27, -79, -79, 34, 44, 34, 99, 114, 101, 97, 116, 101, 84, 105, 109, 101, 34, 58, 110, 117, 108, 108, 44, 34, 118, 105, 100, 101, 111, 67, 111, 118, 101, 114, 34, 58, 34, 104, 116, 116, 112, 58, 47, 47, 49, 50, 48, 46, 53, 53, 46, 49, 56, 51, 46, 49, 53, 53, 58, 57, 48, 48, 48, 47, 117, 115, 101, 114, 45, 99, 111, 118, 101, 114, 47, 100, 101, 102, 117, 97, 108, 116, 46, 112, 110, 103, 34, 44, 34, 118, 105, 100, 101, 111, 73, 100, 34, 58, 52, 44, 34, 97, 117, 116, 104, 111, 114, 73, 100, 34, 58, 49, 125], transactionId='null'}]
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
### The error may exist in ljl/bilibili/mapper/notice/dynamic/DynamicMapper.java (best guess)
### The error may involve ljl.bilibili.mapper.notice.dynamic.DynamicMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO dynamic  ( video_name, create_time, cover, video_id, author_id )  VALUES  ( ?, ?, ?, ?, ? )
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy112.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy120.insert(Unknown Source)
	at ljl.bilibili.notice.consumer.dynamic.DynamicConsumer.onMessage(DynamicConsumer.java:54)
	at ljl.bilibili.notice.consumer.dynamic.DynamicConsumer.onMessage(DynamicConsumer.java:27)
	at org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer$DefaultMessageListenerConcurrently.consumeMessage(DefaultRocketMQListenerContainer.java:350)
	at org.apache.rocketmq.client.impl.consumer.ConsumeMessageConcurrentlyService$ConsumeRequest.run(ConsumeMessageConcurrentlyService.java:411)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy187.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 16 common frames omitted
2024-03-10 00:31:01 |WARN  |ConsumeMessageThread_2 |DefaultRocketMQListenerContainer.java:354 |org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer |consume message failed. messageExt:MessageExt [queueId=0, storeSize=549, queueOffset=0, sysFlag=0, bornTimestamp=1710001828164, bornHost=/120.227.131.104:44213, storeTimestamp=1710001861479, storeHost=/47.97.29.16:10911, msgId=2F611D1000002A9F00000000000022D3, commitLogOffset=8915, bodyCRC=1048138659, reconsumeTimes=1, preparedTransactionOffset=0, toString()=Message{topic='dynamic', flag=0, properties={CONSUME_START_TIME=1710001861418, MIN_OFFSET=0, REAL_TOPIC=%RETRY%dynamic-group, ORIGIN_MESSAGE_ID=2F611D1000002A9F0000000000001957, RETRY_TOPIC=dynamic, MAX_OFFSET=1, id=d0e27a12-05bb-3cd5-b5f7-d1156f6a0d9c, UNIQ_KEY=C0A80A090A5814DAD5DC2E7520920001, CLUSTER=DefaultCluster, contentType=text/plain;charset=UTF-8, WAIT=false, DELAY=3, timestamp=1710001827683, REAL_QID=0}, body=[123, 34, 105, 100, 34, 58, 110, 117, 108, 108, 44, 34, 118, 105, 100, 101, 111, 78, 97, 109, 101, 34, 58, 34, -27, -121, -70, -27, -79, -79, 34, 44, 34, 99, 114, 101, 97, 116, 101, 84, 105, 109, 101, 34, 58, 110, 117, 108, 108, 44, 34, 118, 105, 100, 101, 111, 67, 111, 118, 101, 114, 34, 58, 34, 104, 116, 116, 112, 58, 47, 47, 49, 50, 48, 46, 53, 53, 46, 49, 56, 51, 46, 49, 53, 53, 58, 57, 48, 48, 48, 47, 117, 115, 101, 114, 45, 99, 111, 118, 101, 114, 47, 100, 101, 102, 117, 97, 108, 116, 46, 112, 110, 103, 34, 44, 34, 118, 105, 100, 101, 111, 73, 100, 34, 58, 52, 44, 34, 97, 117, 116, 104, 111, 114, 73, 100, 34, 58, 49, 125], transactionId='null'}]
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
### The error may exist in ljl/bilibili/mapper/notice/dynamic/DynamicMapper.java (best guess)
### The error may involve ljl.bilibili.mapper.notice.dynamic.DynamicMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO dynamic  ( video_name, create_time, cover, video_id, author_id )  VALUES  ( ?, ?, ?, ?, ? )
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy112.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy120.insert(Unknown Source)
	at ljl.bilibili.notice.consumer.dynamic.DynamicConsumer.onMessage(DynamicConsumer.java:54)
	at ljl.bilibili.notice.consumer.dynamic.DynamicConsumer.onMessage(DynamicConsumer.java:27)
	at org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer$DefaultMessageListenerConcurrently.consumeMessage(DefaultRocketMQListenerContainer.java:350)
	at org.apache.rocketmq.client.impl.consumer.ConsumeMessageConcurrentlyService$ConsumeRequest.run(ConsumeMessageConcurrentlyService.java:411)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy187.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 16 common frames omitted
2024-03-10 00:31:31 |WARN  |ConsumeMessageThread_3 |DefaultRocketMQListenerContainer.java:354 |org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer |consume message failed. messageExt:MessageExt [queueId=0, storeSize=549, queueOffset=1, sysFlag=0, bornTimestamp=1710001828164, bornHost=/120.227.131.104:44213, storeTimestamp=1710001891610, storeHost=/47.97.29.16:10911, msgId=2F611D1000002A9F000000000000271C, commitLogOffset=10012, bodyCRC=1048138659, reconsumeTimes=2, preparedTransactionOffset=0, toString()=Message{topic='dynamic', flag=0, properties={CONSUME_START_TIME=1710001891545, MIN_OFFSET=0, REAL_TOPIC=%RETRY%dynamic-group, ORIGIN_MESSAGE_ID=2F611D1000002A9F0000000000001957, RETRY_TOPIC=dynamic, MAX_OFFSET=2, id=d0e27a12-05bb-3cd5-b5f7-d1156f6a0d9c, UNIQ_KEY=C0A80A090A5814DAD5DC2E7520920001, CLUSTER=DefaultCluster, contentType=text/plain;charset=UTF-8, WAIT=false, DELAY=4, timestamp=1710001827683, REAL_QID=0}, body=[123, 34, 105, 100, 34, 58, 110, 117, 108, 108, 44, 34, 118, 105, 100, 101, 111, 78, 97, 109, 101, 34, 58, 34, -27, -121, -70, -27, -79, -79, 34, 44, 34, 99, 114, 101, 97, 116, 101, 84, 105, 109, 101, 34, 58, 110, 117, 108, 108, 44, 34, 118, 105, 100, 101, 111, 67, 111, 118, 101, 114, 34, 58, 34, 104, 116, 116, 112, 58, 47, 47, 49, 50, 48, 46, 53, 53, 46, 49, 56, 51, 46, 49, 53, 53, 58, 57, 48, 48, 48, 47, 117, 115, 101, 114, 45, 99, 111, 118, 101, 114, 47, 100, 101, 102, 117, 97, 108, 116, 46, 112, 110, 103, 34, 44, 34, 118, 105, 100, 101, 111, 73, 100, 34, 58, 52, 44, 34, 97, 117, 116, 104, 111, 114, 73, 100, 34, 58, 49, 125], transactionId='null'}]
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
### The error may exist in ljl/bilibili/mapper/notice/dynamic/DynamicMapper.java (best guess)
### The error may involve ljl.bilibili.mapper.notice.dynamic.DynamicMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO dynamic  ( video_name, create_time, cover, video_id, author_id )  VALUES  ( ?, ?, ?, ?, ? )
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy112.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy120.insert(Unknown Source)
	at ljl.bilibili.notice.consumer.dynamic.DynamicConsumer.onMessage(DynamicConsumer.java:54)
	at ljl.bilibili.notice.consumer.dynamic.DynamicConsumer.onMessage(DynamicConsumer.java:27)
	at org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer$DefaultMessageListenerConcurrently.consumeMessage(DefaultRocketMQListenerContainer.java:350)
	at org.apache.rocketmq.client.impl.consumer.ConsumeMessageConcurrentlyService$ConsumeRequest.run(ConsumeMessageConcurrentlyService.java:411)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'cover' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:64)
	at com.sun.proxy.$Proxy187.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 16 common frames omitted
2024-03-10 00:31:45 |WARN  |Thread-43 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-03-10 00:31:45 |WARN  |Thread-39 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-03-10 00:31:45 |WARN  |Thread-39 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-03-10 00:31:45 |WARN  |Thread-43 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-03-10 00:31:46 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:31:46 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:32:19 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 00:48:47 |WARN  |ConsumeMessageThread_2 |DefaultRocketMQListenerContainer.java:354 |org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer |consume message failed. messageExt:MessageExt [queueId=2, storeSize=521, queueOffset=3, sysFlag=0, bornTimestamp=1710002671447, bornHost=/120.227.131.104:44409, storeTimestamp=1710002671550, storeHost=/47.97.29.16:10911, msgId=2F611D1000002A9F000000000000387E, commitLogOffset=14462, bodyCRC=1117891072, reconsumeTimes=0, preparedTransactionOffset=0, toString()=Message{topic='mysqlToEs', flag=0, properties={MIN_OFFSET=0, MAX_OFFSET=4, CONSUME_START_TIME=1710002671522, id=29f534a6-ec05-e061-d59b-7a5cbaf46765, UNIQ_KEY=C0A80A091D8C14DAD5DC2E81FF570011, CLUSTER=DefaultCluster, contentType=text/plain;charset=UTF-8, timestamp=1710002671312}, body=[123, 34, 99, 114, 101, 97, 116, 101, 95, 116, 105, 109, 101, 34, 58, 34, 50, 48, 50, 52, 45, 48, 51, 45, 49, 48, 84, 48, 48, 58, 51, 54, 58, 53, 57, 46, 49, 57, 57, 34, 44, 34, 117, 115, 101, 114, 95, 105, 100, 34, 58, 49, 44, 34, 105, 110, 116, 114, 111, 34, 58, 34, -27, -121, -70, -27, -79, -79, 34, 44, 34, 108, 101, 110, 103, 116, 104, 34, 58, 110, 117, 108, 108, 44, 34, 110, 97, 109, 101, 34, 58, 34, -27, -121, -70, -27, -79, -79, 34, 44, 34, 117, 114, 108, 34, 58, 34, 104, 116, 116, 112, 115, 58, 47, 47, 108, 97, 98, 105, 108, 105, 98, 105, 108, 105, 46, 99, 111, 109, 47, 118, 105, 100, 101, 111, 47, -27, -121, -70, -27, -79, -79, 98, 48, 101, 102, 54, 97, 50, 54, 45, 99, 34, 44, 34, 99, 111, 118, 101, 114, 34, 58, 34, 104, 116, 116, 112, 58, 47, 47, 49, 50, 48, 46, 53, 53, 46, 49, 56, 51, 46, 49, 53, 53, 58, 57, 48, 48, 48, 47, 117, 115, 101, 114, 45, 99, 111, 118, 101, 114, 47, 100, 101, 102, 117, 97, 108, 116, 46, 112, 110, 103, 34, 44, 34, 116, 97, 98, 108, 101, 34, 58, 34, 118, 105, 100, 101, 111, 34, 44, 34, 116, 121, 112, 101, 34, 58, 34, 97, 100, 100, 34, 44, 34, 118, 105, 100, 101, 111, 95, 105, 100, 34, 58, 54, 125], transactionId='null'}]
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1063)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:920)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceListCommands.rPush(LettuceListCommands.java:53)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.rPush(DefaultedRedisConnection.java:653)
	at org.springframework.data.redis.core.DefaultListOperations.lambda$rightPush$12(DefaultListOperations.java:280)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:223)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultListOperations.rightPush(DefaultListOperations.java:280)
	at ljl.bilibili.notice.consumer.mysql_es.MysqlToEsConsumer.onMessage(MysqlToEsConsumer.java:48)
	at ljl.bilibili.notice.consumer.mysql_es.MysqlToEsConsumer.onMessage(MysqlToEsConsumer.java:21)
	at org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer$DefaultMessageListenerConcurrently.consumeMessage(DefaultRocketMQListenerContainer.java:350)
	at org.apache.rocketmq.client.impl.consumer.ConsumeMessageConcurrentlyService$ConsumeRequest.run(ConsumeMessageConcurrentlyService.java:411)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 minute(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1061)
	... 20 common frames omitted
2024-03-10 00:53:34 |WARN  |ConsumeMessageThread_4 |DefaultRocketMQListenerContainer.java:354 |org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer |consume message failed. messageExt:MessageExt [queueId=3, storeSize=517, queueOffset=1, sysFlag=0, bornTimestamp=1710003186272, bornHost=/120.227.131.104:44883, storeTimestamp=1710003186381, storeHost=/47.97.29.16:10911, msgId=2F611D1000002A9F00000000000041AE, commitLogOffset=16814, bodyCRC=730454039, reconsumeTimes=0, preparedTransactionOffset=0, toString()=Message{topic='mysqlToEs', flag=0, properties={MIN_OFFSET=0, MAX_OFFSET=2, CONSUME_START_TIME=1710003186545, id=e77f91e0-41d0-73e5-09bb-676db136b2eb, UNIQ_KEY=C0A80A091D8C14DAD5DC2E89DA600020, CLUSTER=DefaultCluster, contentType=text/plain;charset=UTF-8, timestamp=1710003186268}, body=[123, 34, 99, 114, 101, 97, 116, 101, 95, 116, 105, 109, 101, 34, 58, 34, 50, 48, 50, 52, 45, 48, 51, 45, 49, 48, 84, 48, 48, 58, 53, 51, 58, 48, 53, 46, 50, 53, 57, 34, 44, 34, 117, 115, 101, 114, 95, 105, 100, 34, 58, 49, 44, 34, 105, 110, 116, 114, 111, 34, 58, 34, -27, -121, -70, -27, -79, -79, 34, 44, 34, 108, 101, 110, 103, 116, 104, 34, 58, 110, 117, 108, 108, 44, 34, 110, 97, 109, 101, 34, 58, 34, -27, -121, -70, -27, -79, -79, 34, 44, 34, 117, 114, 108, 34, 58, 34, 104, 116, 116, 112, 115, 58, 47, 47, 108, 97, 98, 105, 108, 105, 98, 105, 108, 105, 46, 99, 111, 109, 47, 118, 105, 100, 101, 111, 47, -27, -121, -70, -27, -79, -79, 99, 49, 101, 51, 98, 48, 54, 51, 45, 48, 34, 44, 34, 99, 111, 118, 101, 114, 34, 58, 34, 104, 116, 116, 112, 115, 58, 47, 47, 108, 97, 98, 105, 108, 105, 98, 105, 108, 105, 46, 99, 111, 109, 47, 117, 115, 101, 114, 45, 99, 111, 118, 101, 114, 47, 100, 101, 102, 117, 97, 108, 116, 46, 112, 110, 103, 34, 44, 34, 116, 97, 98, 108, 101, 34, 58, 34, 118, 105, 100, 101, 111, 34, 44, 34, 116, 121, 112, 101, 34, 58, 34, 97, 100, 100, 34, 44, 34, 118, 105, 100, 101, 111, 95, 105, 100, 34, 58, 56, 125], transactionId='null'}]
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:272)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1063)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:920)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665)
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:109)
	at org.springframework.data.redis.connection.lettuce.LettuceListCommands.rPush(LettuceListCommands.java:53)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.rPush(DefaultedRedisConnection.java:653)
	at org.springframework.data.redis.core.DefaultListOperations.lambda$rightPush$12(DefaultListOperations.java:280)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:223)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultListOperations.rightPush(DefaultListOperations.java:280)
	at ljl.bilibili.notice.consumer.mysql_es.MysqlToEsConsumer.onMessage(MysqlToEsConsumer.java:48)
	at ljl.bilibili.notice.consumer.mysql_es.MysqlToEsConsumer.onMessage(MysqlToEsConsumer.java:21)
	at org.apache.rocketmq.spring.support.DefaultRocketMQListenerContainer$DefaultMessageListenerConcurrently.consumeMessage(DefaultRocketMQListenerContainer.java:350)
	at org.apache.rocketmq.client.impl.consumer.ConsumeMessageConcurrentlyService$ConsumeRequest.run(ConsumeMessageConcurrentlyService.java:411)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: io.lettuce.core.RedisException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at io.lettuce.core.internal.Exceptions.bubble(Exceptions.java:83)
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:250)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1061)
	... 20 common frames omitted
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
2024-03-10 00:53:34 |WARN  |nacos-grpc-client-executor-203 |LoggerUtils.java:86 |com.alibaba.nacos.common.remote.client.grpc.GrpcClient |[1710001938223_120.227.131.104_44414]Ignore error event,isRunning:true,isAbandon=true
2024-03-10 00:57:15 |WARN  |Thread-45 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-03-10 00:57:15 |WARN  |Thread-42 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-03-10 00:57:15 |WARN  |Thread-42 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-03-10 00:57:15 |WARN  |Thread-45 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-03-10 00:57:16 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:57:16 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
2024-03-10 00:57:40 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 01:04:39 |WARN  |Thread-33 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-03-10 01:04:39 |WARN  |Thread-33 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-03-10 01:04:39 |WARN  |Thread-36 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-03-10 01:04:39 |WARN  |Thread-36 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-03-10 01:04:42 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 01:04:42 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
2024-03-10 01:05:11 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 01:07:58 |WARN  |Thread-37 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-03-10 01:07:58 |WARN  |Thread-34 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-03-10 01:07:58 |WARN  |Thread-34 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-03-10 01:07:58 |WARN  |Thread-37 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-03-10 01:08:01 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 01:08:01 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
2024-03-10 01:08:27 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 01:13:13 |WARN  |Thread-42 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-03-10 01:13:13 |WARN  |Thread-39 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-03-10 01:13:13 |WARN  |Thread-39 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-03-10 01:13:13 |WARN  |Thread-42 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-03-10 01:13:15 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 01:13:15 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
2024-03-10 01:17:12 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 01:17:16 |WARN  |main |AbstractApplicationContext.java:591 |org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext |Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is java.lang.NullPointerException
2024-03-10 01:17:18 |WARN  |main |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 01:17:18 |WARN  |main |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
2024-03-10 01:17:55 |WARN  |main |LoadBalancerCacheAutoConfiguration.java:82 |org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger |Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-10 01:21:03 |WARN  |Thread-39 |NotifyCenter.java:136 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Start destroying Publisher
2024-03-10 01:21:03 |WARN  |Thread-39 |NotifyCenter.java:153 |com.alibaba.nacos.common.notify.NotifyCenter |[NotifyCenter] Destruction of the end
2024-03-10 01:21:03 |WARN  |Thread-42 |HttpClientBeanHolder.java:108 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Start destroying common HttpClient
2024-03-10 01:21:03 |WARN  |Thread-42 |HttpClientBeanHolder.java:114 |com.alibaba.nacos.common.http.HttpClientBeanHolder |[HttpClientBeanHolder] Destruction of the end
2024-03-10 01:21:06 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:222 |org.springframework.beans.factory.support.DisposableBeanAdapter |Invocation of destroy method failed on bean with name 'rocketMQTemplate': java.lang.IllegalStateException: Shutdown in progress
2024-03-10 01:21:06 |WARN  |SpringApplicationShutdownHook |DisposableBeanAdapter.java:329 |org.springframework.beans.factory.support.DisposableBeanAdapter |Custom destroy method 'shutdown' on bean with name 'defaultMQProducer' threw an exception: java.lang.IllegalStateException: Shutdown in progress
